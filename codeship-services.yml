wocky-build:
  build:
    context: .
    dockerfile: Dockerfile.build
    image: hippware/wocky:build
  cached: true
  volumes:
    - ./tmp/artifacts:/artifacts
wocky-test:
  build:
    context: .
    dockerfile: Dockerfile.build
    image: hippware/wocky:build
  cached: true
  environment:
    WOCKY_DB_HOST: "postgres"
    REDIS_HOST: "redis"
    REDIS_PORT: 6379
  depends_on:
    - postgres
    - redis
wocky-migration-test:
  build:
    context: .
    dockerfile: Dockerfile.migrationtest
    image: hippware/wocky:migrationtest
  cached: true
  environment:
    WOCKY_DB_HOST: "postgres"
    WOCKY_DB_PASSWORD: "password"
  depends_on:
    - postgres
  encrypted_env_file: codeship/migration_test.env.encrypted
postgres:
  image: hippware/postgis-healthcheck:10-alpine
  environment:
    POSTGRES_PASSWORD: "password"
  ports:
    - "5432"
redis:
  image: redis:3.2-alpine
  ports:
    - "6379"
wocky-rel:
  build:
    context: .
    dockerfile: Dockerfile.release
    image: 773488857071.dkr.ecr.us-west-2.amazonaws.com/hippware/wocky:latest
    args:
      RELEASE_NAME: wocky
  cached: true
aws-dockercfg:
  image: codeship/aws-ecr-dockercfg-generator
  add_docker: true
  encrypted_env_file: codeship/aws.env.encrypted
dockerlint:
  image: redcoolbeans/dockerlint
  volumes:
    - ./Dockerfile.build:/Dockerfile.build
    - ./Dockerfile.release:/Dockerfile.release
eks-deploy:
  image: 773488857071.dkr.ecr.us-west-2.amazonaws.com/hippware/eks-deploy:latest
  encrypted_env_file: codeship/aws.env.encrypted
  volumes:
    - k8s:/k8s
    - wocky-deploy:/wocky-deploy
curl-ssl:
  image: governmentpaas/curl-ssl
  encrypted_env_file: codeship/circleci.env.encrypted
  volumes:
    - kick-circleci:/kick-circleci
waiter:
  image: codeship/build-waiter
  encrypted_env_file: codeship/waiter.cfg.encrypted
