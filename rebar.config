%% -*- mode: erlang; erlang-indent-level: 2; indent-tabs-mode: nil -*-
%% ex: ts=2 sw=2 ft=erlang et

{require_min_otp_vsn, "18"}.

{erl_opts, [
  debug_info,
  warnings_as_errors,
  %% warn_export_all,
  warn_export_vars,
  warn_obsolete_guard,
  warn_unused_import,
  {warn_format, 1},
  {parse_transform, lager_transform}
]}.

{post_hooks, [
  {clean, "rm -f doc/*html doc/stylesheet.css doc/edoc-info doc/erlang.png"}
]}.

{alias, [
  {check, [lint, dialyzer, eunit]},
  {test, [ct, cover]}
]}.

{edoc_opts, [{pretty_printer, erl_pp}]}.


%%% === Testing ===

%% The app_config settings below are not currently supported in the
%% official version of rebar3. We are using a patched version with this
%% feature, though hopefully the feature will be accepted into the official
%% version.

{cover_enabled, true}.
{cover_opts, [verbose]}.
{eunit_opts, [
  verbose, no_tty,
  {report, {eunit_progress, [colored, profile]}},
  {app_config, "test/app.config"}
]}.
{ct_opts, [
  {logdir, "_build/test/ct_logs"},
  {app_config, "test/app.config"},
  {config, "test/test.config"}
]}.

%% Xref
{xref_warnings, true}.
{xref_checks, [
  undefined_function_calls, undefined_functions, locals_not_used,
  exports_not_used, deprecated_function_calls, deprecated_functions
]}.

%% Dialyzer
{dialyzer, [
  {warnings, [unmatched_returns, error_handling, underspecs, unknown]},
  {base_plt_apps, [
    compiler, crypto, erts, kernel, stdlib, mnesia, ssl, ssh, xmerl, public_key,
    tools, sasl, hipe, edoc, syntax_tools, runtime_tools, inets, webtool, asn1,
    cowboy, cowlib, exml, p1_utils, binpp, pretty_errors, mochijson2,
    webmachine, erlando, z_stdlib, erld
  ]},
  {plt_apps, top_level_deps} % top_level_deps | all_deps
]}.

%% Elvis (lint)
{elvis, [
  #{dirs => ["src", "test"],
    filter => "*.erl",
    rules => [
      {elvis_style, line_length,
       #{ignore => [], limit => 80, skip_comments => false}},
      {elvis_style, no_tabs},
      {elvis_style, no_trailing_whitespace},
      {elvis_style, macro_names, #{ignore => []}},
      {elvis_style, macro_module_names},
      {elvis_style, operator_spaces,
       #{rules => [{right, ","}, {right, "++"}, {left, "++"}]}},
      {elvis_style, nesting_level, #{level => 3}},
      {elvis_style, god_modules, #{limit => 25, ignore => []}},
      {elvis_style, no_if_expression},
      {elvis_style, invalid_dynamic_call, #{ignore => [mod_wocky_roster]}},
      {elvis_style, used_ignored_variable},
      {elvis_style, no_behavior_info},
      {elvis_style, module_naming_convention,
       #{regex => "^[a-z]([a-z0-9]*_?)*(_SUITE)?$", ignore => []}},
      {elvis_style, function_naming_convention,
       #{regex => "^([a-z][a-z0-9]*_?)*|'>>='$"}},
      {elvis_style, state_record_and_type},
      {elvis_style, no_spec_with_records},
      {elvis_style, dont_repeat_yourself, #{min_complexity => 15}},
      {elvis_style, no_debug_call, #{ignore => [mam_SUITE, user_default]}}
   ]},
  #{dirs => ["."],
    filter => "rebar.config",
    rules => [
      %% {elvis_project, protocol_for_deps_rebar, #{ignore => []}},
      %% {elvis_project, no_deps_master_rebar, #{ignore => []}}
   ]}
]}.


%%% === Shell/Auto ===
{shell, [
  {apps, [sasl, wocky]}
]}.


%%% === Release ===
{relx, [
  {release, {"wocky", {cmd, "/bin/bash -c \"echo -n `date -u +%y.%m.%d`+`git rev-list HEAD|wc -l|tr -d ' '`\""}}, [
     wocky,

     %% ejabberd dependencies that aren't listed in ejabberd.app
     fusco, p1_utils, cache_tab, pa, cuesport, base16, alarms, idna, setup,
     runtime_tools, xmerl, usec,

     %% Runtime tools
     recon, eper, binpp, pretty_errors
  ]},

  {dev_mode, false},
  {include_erts, true},
  {include_src, false},

  {generate_start_script, true},
  {extended_start_script, true},

  {sys_config, "etc/sys.config"},
  {vm_args, "etc/vm.args"},

  {overlay, [
    {mkdir, "var/run"},
    {mkdir, "var/lock"},
    {copy, "bin", "."},
    {copy, "etc/_global.cfg", "etc/"},
    {copy, "etc/staging.cfg", "etc/"},
    {copy, "etc/testing.cfg", "etc/"},
    {copy, "etc/dev.cfg", "etc/"},
    {template, "src/wocky.init", "etc/init.d/wocky"}
  ]}
]}.


%%% === Dependencies ===
{deps, [
  %% Wocky depoendencies
  {pooler,        "1.5.0"},
  {setup,         "1.7.0"},
  {lager,         {github, "basho/lager",             {tag, "3.1.0"}}},
  {cqerl,         {github, "hippware/cqerl",          {branch, "working"}}},
  {ossp_uuid,     {github, "toland/erlang-ossp-uuid", {tag, "v1.0.1"}}},
  {webmachine,    {github, "webmachine/webmachine",   {tag, "1.10.8"}}},
  {ejabberd,      {rsync, "ext/MongooseIM/apps/ejabberd"}},

  %% ejabberd dependencies
  {redo,          "2.0.1"},
  {riakc,         "2.1.1"},
  {cowboy,        "1.0.4"},
  {folsom,        "0.8.3"},
  {idna,          "1.1.0"},
  {p1_utils,      "1.0.4"},
  {cache_tab,     "1.0.2"},
  {stringprep,    "1.0.3"},
  {base16,        "1.0.0"},
  {cuesport,      {github, "esl/cuesport",            {ref, "d82ff2"}}},
  {exml,          {github, "esl/exml",                {tag, "2.2.0"}}},
  {exometer_core, {github, "Feuerlabs/exometer_core", {tag, "1.4"}}},
  {exometer,      {github, "Feuerlabs/exometer",      {tag, "1.2.1"}}},
  {mochijson2,    {github, "bjnortier/mochijson2",    {ref, "e162b7"}}},
  {alarms,        {github, "toland/alarms",           {tag, "0.1.2"}}},
  {fusco,         {github, "esl/fusco",               {ref, "0a4284"}}},
  {pa,            {github, "lavrin/pa",               {ref, "070bf37"}}},
  {usec,          {github, "esl/usec",                {ref, "f85ffd"}}},

  %% runtime dependencies (included in release, not needed to build)
  {recon,         "2.3.1"},
  {eper,          "0.94.0"},
  {binpp,         {github, "jtendo/binpp",            {ref, "15d836"}}},
  {pretty_errors, {github, "eproxus/pretty_errors",   {ref, "697be6"}}},
  {z_stdlib,      {github, "zotonic/z_stdlib",        {ref, "b9f19b9"}}},

  %% build dependencies (not included in release)
  {edown,         "0.7.0"},
  {erlando,       {github, "rabbitmq/erlando",        {ref, "1c1ef25"}}},
  {fun_chain,     {github, "sasa1977/fun_chain",      {ref, "e6eede5"}}},
  {edeliver,      {github, "hippware/edeliver",       {branch, "devel"}}},

  %% testing dependencies (not included in release)
  {proper,        "1.1.1-beta"},
  {meck,          "0.8.4"},
  {escalus,       {github, "esl/escalus",             {ref, "b58c908"}}}
]}.


%%% === Overrides ===
{overrides, [
  %% Setup has a post_hook that attempts to generate an escript
  %% the hook fails and we don't need the escript so blank out the hook
  {override, setup, [
    {post_hooks, []}
  ]},

  %% Some dependencies use rebar 2 plugins causing a warning on every compile
  %% Since they don't work anyway, we can just zero-out the plugin list
  {override, riak_pb, [{plugins, []}]},
  {override, hamcrest, [{plugins, []}]},

  %% stringprep, exml and ejabberd all have ports/nifs that require the
  %% port compiler. In rebar3 it is a plugin, so we need to hook it into the
  %% build pipeline
  {override, stringprep, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  {override, exml, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  {override, lz4, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  {override, snappy, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  {override, re2, [
    {provider_hooks, [{post, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]},
    {port_env, [
      {"DRV_CFLAGS",  "$DRV_CFLAGS -O3 -Wall -Wextra -I c_src/re2 -std=c++11"},
      {"DRV_LDFLAGS", "$DRV_LDFLAGS c_src/re2/obj/libre2.a"},
      {"(linux|freebsd|solaris)", "LDFLAGS", "$LDFLAGS -lstdc++"}
    ]}
  ]},

  %% ejabberd also has two ASN.1 files that need to be compiled. This feature
  %% isn't in rebar3, but luckily there is a plugin that can do it.
  {override, ejabberd, [
    %% Make sure the port compiler can find openssl on Mac OS X
    {port_env, [
      {"darwin", "CFLAGS",   "$CFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
      {"darwin", "CXXFLAGS", "$CXXFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
      {"darwin", "LDFLAGS",  "$LDFLAGS -L/usr/local/opt/openssl/lib -L/usr/local/lib"}
    ]},
    %% The ejabberd.app.src file calls out to a script to generate the version
    %% number. This breaks our build. Edit out the external script call.
    {pre_hooks, [
      {compile, "sed -i.bak /\\`.*\\`/s//1.6.2/ src/ejabberd.app.src"}
    ]},
    {deps, [riakc]}, % force riakc to build before ejabberd
    {asn1_opts, [{outdir, "src"}, noobj]},
    {provider_hooks, [
      {pre, [
        {compile, {pc,   compile}},
        {compile, {asn1, compile}},
        {clean,   {pc,   clean}},
        {clean,   {asn1, clean}}
      ]}
    ]}
  ]}
]}.


%%% === Rebar Plugins ===
{plugins, [
  {pc, "1.2.0"},
  {rebar_alias, "0.1.0"},
  {rebar3_asn1_compiler, {git, "https://github.com/hippware/rebar3_asn1_compiler.git", {ref, "f94a7b4"}}},
  {rebar_tidy_deps, {git, "https://github.com/kellymclaughlin/rebar3-tidy-deps-plugin.git", {tag, "0.0.2"}}},
  {rebar_rsync_deps, {git, "https://github.com/toland/rebar-rsync-deps.git", {ref, "c48965"}}},
  {rebar3_lint, {git, "https://github.com/hippware/rebar3_lint.git", {branch, "master"}}}
]}.
