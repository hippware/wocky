%% -*- mode: erlang; erlang-indent-level: 2; indent-tabs-mode: nil -*-
%% ex: ts=2 sw=2 ft=erlang et

{require_min_otp_vsn, "17"}.

{erl_opts, [
  debug_info,
  {parse_transform, lager_transform}
]}.


%%% === Testing ===

{cover_enabled, true}.
{cover_opts, [verbose]}.
{eunit_opts, [verbose]}.

%% Xref
{xref_warnings, true}.
{xref_checks, [
  undefined_function_calls, undefined_functions, locals_not_used,
  exports_not_used, deprecated_function_calls, deprecated_functions
]}.
{xref_queries, [
  {"(XC - UC) || (XU - X - B"
   " - (\"cassandra_backend\":\"backend\"/\"0\"))", []}
]}.

%% Dialyzer
{dialyzer, [
  {warnings, [underspecs, no_return, unmatched_returns]},
  {base_plt_apps, [
    compiler, crypto, erts, kernel, stdlib, mnesia, ssl, ssh, xmerl, public_key,
    tools, sasl, hipe, edoc, syntax_tools, runtime_tools, inets, webtool, asn1
  ]},
  {plt_apps, top_level_deps} % top_level_deps | all_deps
]}.


%%% === Shell/Auto ===
{shell, [
  {apps, [wocky]}, % only boot wocky; comment out to start ejabberd
  {config, "etc/dev.config"},
  {script_file, "priv/shell.escript"}
]}.


%%% === Release ===
{relx, [
  {release, {"wocky", semver}, [
     wocky, ejabberd, seestar, ossp_uuid, fusco, p1_utils, p1_cache_tab, pa,
     cuesport, base16, alarms, idna, recon, setup, runtime_tools, xmerl
  ]},

  {dev_mode, false},
  {include_erts, true},

  {generate_start_script, false},
  {extended_start_script, false},

  {sys_config, "etc/sys.config"},
  {vm_args, "etc/vm.args"},

  {overlay, [
    {mkdir, "log/sasl"},
    {copy, "bin", "."},
    {copy, "priv/ssl", "priv/ssl"},
    {copy, "etc/ejabberd.cfg", "priv/ejabberd.cfg"}
  ]}
]}.


%%% === Dependencies ===
{deps, [
  {seestar,       {github, "bengtan/seestar",         {ref, "41927ab"}}},
  {ossp_uuid,     {github, "toland/erlang-ossp-uuid", {tag, "v1.0.1"}}},
  {pooler,        {github, "seth/pooler",             {tag, "1.5.0"}}},
  {lager,         {github, "basho/lager",             {tag, "3.0.2"}}},
  {ejabberd,      {rsync, "ext/MongooseIM/apps/ejabberd"}},

  %% ejabberd dependencies
  {base16,        {github, "goj/base16",              {ref, "1e9dd2"}}},
  {cuesport,      {github, "esl/cuesport",            {ref, "d82ff2"}}},
  {redo,          {github, "JacobVorreuter/redo",     {ref, "7c7eae"}}},
  {exml,          {github, "esl/exml",                {tag, "2.2.0"}}},
  {cowboy,        {github, "ninenines/cowboy",        {tag, "1.0.1"}}},
  {folsom,        {github, "boundary/folsom",         {tag, "0.8.2"}}},
  {exometer,      {github, "esl/exometer",            {branch, "1.1-patched"}}},
  {mochijson2,    {github, "bjnortier/mochijson2",    {branch, "master"}}},
  {alarms,        {github, "toland/alarms",           {tag, "0.1.1"}}},
  {fusco,         {github, "esl/fusco",               {branch, "master"}}},
  {idna,          {github, "benoitc/erlang-idna",     {tag, "1.0.1"}}},
  {protobuffs,    {github, "esl/erlang_protobuffs",   {branch, "OTP18"}}},
  {riakc,         {github, "esl/riak-erlang-client",  {branch, "fix/dialyzer"}}},
  {p1_utils,      {github, "processone/p1_utils",     {ref, "940f42d"}}},
  {p1_cache_tab,  {github, "processone/cache_tab",    {ref, "7b89d6a"}}},
  {p1_stringprep, {github, "processone/stringprep",   {ref, "9e9e0f8"}}},
  {pa,            {github, "lavrin/pa",               {ref, "c616d3f"}}},

  %% runtime dependencies (included in release, not needed to build)
  {recon,         {github, "ferd/recon",              {tag, "2.2.1"}}},

  %% build dependencies (not included in release)
  {edown,         {github, "uwiger/edown",            {tag, "0.7"}}},

  %% testing dependencies (not included in release)
  {proper,        {github, "manopapad/proper",        {ref, "20e62bc"}}},
  {meck,          {github, "eproxus/meck",            {tag, "0.8.3"}}}
]}.


%%% === Port/NIF Compiler ===
%% Make sure we can find openssl on Mac OS X (for ejabberd)
{port_env, [
  {"darwin", "CFLAGS",   "$CFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
  {"darwin", "CXXFLAGS", "$CXXFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
  {"darwin", "LDFLAGS",  "$LDFLAGS -L/usr/local/opt/openssl/lib -L/usr/local/lib"}
]}.


%%% === Overrides ===
{overrides, [
  %% Setup has a post_hook that attempts to generate an escript
  %% the hook fails and we don't need the escript so blank out the hook
  {override, setup, [
    {post_hooks, []}
  ]},

  %% The riak protocol buffers build doesn't really work with rebar3
  %% so we fake it
  {override, riak_pb, [
    {pre_hooks, [{compile, "./rebar compile deps_dir=.."}]}
  ]},

  %% p1_stringprep, exml and ejabberd all have ports/nifs that require the
  %% port compiler. In rebar3 it is a plugin, so we need to hook it into the
  %% build pipeline
  {override, p1_stringprep, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  {override, exml, [
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]},

  %% ejabberd also has two ASN.1 files that need to be compiled. This feature
  %% isn't in rebar3, but luckily it is easy to fake it.
  %% TODO: I should really build a simple ASN.1 plugin for rebar3.
  {override, ejabberd, [
    {pre_hooks, [{compile, "erlc -o ./src -I ./include +noobj ./asn1/*"}]},
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
  ]}
]}.


%%% === Rebar Plugins ===
{plugins, [
  pc,
  {rebar_tidy_deps, {git, "https://github.com/kellymclaughlin/rebar3-tidy-deps-plugin.git", {tag, "0.0.2"}}},
  {rebar_rsync_deps, {git, "https://github.com/toland/rebar-rsync-deps.git", {branch, "master"}}}
]}.
