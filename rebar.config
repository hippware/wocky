%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et
{plugins, [
  pc,
  {rebar_tidy_deps,  {git, "https://github.com/kellymclaughlin/rebar3-tidy-deps-plugin.git", {tag, "0.0.2"}}},
  {rebar_rsync_deps, {git, "https://github.com/toland/rebar-rsync-deps.git", {branch, "master"}}}
]}.

{erl_opts, [debug_info,
            {parse_transform, lager_transform}]}.

{port_env,
 [
  %% Make sure we can find openssl on Mac OS X
  {"darwin", "CFLAGS",   "$CFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
  {"darwin", "CXXFLAGS", "$CXXFLAGS -I/usr/local/opt/openssl/include/ -I/usr/local/include"},
  {"darwin", "LDFLAGS",  "$LDFLAGS -L/usr/local/opt/openssl/lib -L/usr/local/lib"}
 ]}.

{require_otp_vsn, "1[78]"}.

{deps,
 [
  %% wocky dependencies
  {seestar,       {github, "bengtan/seestar",         {ref, "41927ab"}}},
  {ossp_uuid,     {github, "toland/erlang-ossp-uuid", {tag, "v1.0.1"}}},
  {pooler,        {github, "seth/pooler",             {tag, "1.5.0"}}},
  {lager,         {github, "basho/lager",             {tag, "3.0.2"}}},
  {ejabberd,      {rsync, "ext/MongooseIM/apps/ejabberd"}},

  %% ejabberd dependencies
  {base16,        {github, "goj/base16",              {ref, "1e9dd2"}}},
  {cuesport,      {github, "esl/cuesport",            {ref, "d82ff2"}}},
  {redo,          {github, "JacobVorreuter/redo",     {ref, "7c7eae"}}},
  {exml,          {github, "esl/exml",                {tag, "2.2.0"}}},
  {cowboy,        {github, "ninenines/cowboy",        {tag, "1.0.1"}}},
  {folsom,        {github, "boundary/folsom",         {tag, "0.8.2"}}},
  {exometer,      {github, "esl/exometer",            {branch, "1.1-patched"}}},
  {mochijson2,    {github, "bjnortier/mochijson2",    {branch, "master"}}},
  {alarms,        {github, "toland/alarms",           {tag, "0.1.1"}}},
  {fusco,         {github, "esl/fusco",               {branch, "master"}}},
  {idna,          {github, "benoitc/erlang-idna",     {tag, "1.0.1"}}},
  {protobuffs,    {github, "esl/erlang_protobuffs",   {branch, "OTP18"}}},
  {riakc,         {github, "esl/riak-erlang-client",  {branch, "fix/dialyzer"}}},
  {p1_utils,      {github, "processone/p1_utils",     {ref, "940f42d"}}},
  {p1_cache_tab,  {github, "processone/cache_tab",    {ref, "7b89d6a"}}},
  {p1_stringprep, {github, "processone/stringprep",   {ref, "9e9e0f8"}}},
  {pa,            {github, "lavrin/pa",               {ref, "c616d3f"}}},

  %% runtime dependencies (included in release, not needed to build)
  {recon,         {github, "ferd/recon",              {tag, "2.2.1"}}},

  %% build dependencies (not included in release)
  {edown,         {github, "uwiger/edown",            {tag, "0.7"}}},

  %% testing dependencies (not included in release)
  {proper,        {github, "manopapad/proper",        {ref, "20e62bc"}}},
  {meck,          {github, "eproxus/meck",            {tag, "0.8.3"}}}
 ]}.

{overrides,
 [{override, setup, [{post_hooks, []}]},
  {override, riak_pb, [{pre_hooks, [{compile, "./rebar compile deps_dir=.."}]}]},
  {override, p1_stringprep,
   [{provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}]},
  {override, exml,
   [{provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}]},
  {override, ejabberd,
   [{pre_hooks, [{compile, "erlc -o ./src -I ./include +noobj ./asn1/*"}]},
    {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]}
   ]}
 ]}.

{profiles,
 [{prod, [{relx, [{dev_mode, false},
                  {include_erts, true},
                  {include_src, false}]}]},

  {test_node1, [{relx, [{vm_args, "config/test_node1/vm.args"},
                        {overlay, [{mkdir, "log/sasl"},
                                   {copy, "bin", "."},
                                   {copy, "priv/ssl", "priv/ssl"},
                                   {copy, "etc/test_node1/ejabberd.cfg", "priv/ejabberd.cfg"}
                                  ]}]}]},

  {test_node2, [{relx, [{vm_args, "config/test_node2/vm.args"},
                        {overlay, [{mkdir, "log/sasl"},
                                   {copy, "bin", "."},
                                   {copy, "priv/ssl", "priv/ssl"},
                                   {copy, "etc/test_node2/ejabberd.cfg", "priv/ejabberd.cfg"}
                                  ]}]}]}
 ]}.

{relx, [{release, {"wocky", semver},
         [wocky,
          ejabberd,
          seestar,
          ossp_uuid,
          fusco,
          p1_utils,
          p1_cache_tab,
          pa,
          cuesport,
          base16,
          alarms,
          idna,
          recon,
          setup,
          runtime_tools,
          xmerl
         ]},

        {dev_mode, true},
        {include_erts, false},

        {generate_start_script, false},
        {extended_start_script, false},

        {sys_config, "etc/sys.config"},
        {vm_args, "etc/vm.args"},

        {overlay, [{mkdir, "log/sasl"},
                   {copy, "bin", "."},
                   {copy, "priv/ssl", "priv/ssl"},
                   {copy, "etc/ejabberd.cfg", "priv/ejabberd.cfg"}
                  ]}
   ]}.


{xref_warnings, false}.
{xref_extra_paths,[]}.
{xref_checks, [undefined_function_calls, undefined_functions,
               locals_not_used, exports_not_used,
               deprecated_function_calls, deprecated_functions]}.
{xref_queries,
 [{"(XC - UC) || (XU - X - B"
   " - (\"cassandra_backend\":\"backend\"/\"0\"))", []}]}.

{cover_enabled, true}.
{cover_opts, [verbose]}.

{eunit_tests, [{application, wocky}]}.
{eunit_opts, [verbose]}.

{ct_opts, [{dir, "apps/wocky/test"}]}.

{dialyzer, [
    {warnings, [underspecs, no_return, unmatched_returns]},
    {get_warnings, true},
    {plt_apps, top_level_deps}, % top_level_deps | all_deps
    {plt_extra_apps, [ejabberd]},
    {plt_location, local}, % local | "/my/file/name"
    {plt_prefix, "rebar3"},
    {base_plt_apps, [compiler, crypto, erts, kernel, stdlib, mnesia, ssl, ssh,
                     xmerl, public_key, tools, sasl, hipe, edoc, syntax_tools,
                     runtime_tools, inets, webtool, asn1]},
    {base_plt_location, global}, % global | "/my/file/name"
    {base_plt_prefix, "rebar3"}
]}.

{shell, [
  {apps, [wocky]},
  {config, "etc/dev.config"},
  {script_file, "priv/shell.escript"}
]}.
